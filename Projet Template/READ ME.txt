Nous avons commencé par répartir les tâches entre nous. Tarik le menu, Teo les entity, Emilien la map pendant que thomas finissait de régler son problème.

Tarik (Map) :
J'ai commencé par faire une classe Menu avec également un enum pour définir les différents écran de menu du jeu.
J'ai fait une fonction draw pour les boutons et une fonction handleInput pour vérifier si un bouton est cliqué.
J'ai ensuite fait une classe Button afin de créé les boutons, les boutons sont pour l'instant des rectangles.

J'ai fini les différents menu en utilisant des types, il y'a donc le menu principal avec comme bouton play et quitter, un menu pause avec comme bouton resume, options et quitter, un menu Options accessible depuis le menu pause avec un bouton pour revenir vers le menu pause ,un menu pour le game over lorsque qu'on meurt qui affiche " Game over " et un menu Win qui affiche " You Win ! " lorsqu'on vient à bout du boss. La plupart des des menus ont comme interaction la touche échap afin de soit quitter le jeu, soit revenir en arrière ou bien faire afficher le menu pause lorsque l'on joue. À côté de ça j'ai également ajouter des Sprites pour les différents bouton et un background pour le menu principal dans le thème de notre jeu. 

J'ai commencé à créé le boss, le boss aura comme particularité d'alterner entre des tires de shuriken et des attaques au corps à corps lorsque le joueur s'approche de lui.

Teo (Entity) :J'ai commencé par faire la classe entity pour que le player, les ennemis et autres. La classe a comme attribut x, y, texture et sprite, et comme methode 
le constructeur update et draw des méthodes qui seront override dans les classes qui herite de entity. Ensuite j'ai fait player qui utilise entity avec l'attribut vitesse en plus et sa fonction update permet de bouger la camera avec ZQSD.


Emilien (Map/Player attack) : 
J'ai d'abord commencé par ajouter deux sprite et deux textures pour l'herbe et la pierre qui servira de mur.
J'ai fait une fonction pour donner comme texture aux sprite un rectangle de couleur pour ne pas avoir à trouver des assets.
J'ai ensuite initialisé dans le constructeur les textures et sprites.
Après cela j'ai fait une fonction pour charger la map depuis un fichier txt et l'affecter à ma variable map.
Puis j'ai fait la fonction draw de ma class map qui repositionne et draw les sprite en fonction de la valeur de cette case dans mon fichier txt qui correspond à la map.
Enfin j'ai trouvé un tileset simple pour pouvoir déjà donner une texture à la map et en avoir fini avec cela.
J'ai ensuite créé une classe Wall pour pouvoir gérer les murs à part dans la classe Map et aussi pouvoir mieux gérer les collisions avec le joueur.
Ensuite j'ai fait les attaques basiques du Player en ajoutant les shuriken et le katana. J'ai fait une classe projectile pour pouvoir mieux les gérer en leur donnant une direction et en gérant les animations dedans. J'ai fait en sorte que la direction du shuriken soit un vector normalisé de la différence entre la position de la souris et celle du player. Ensuite pour l'attaque du katana j'ai ajouté un calcul d'angle pour pouvoir faire une animation plus réaliste et que l'animation parte dans le sens où le player tape. 
Après cela, j'ai fait le EntityManager pour pouvoir mieux gérer toutes les entités car il commençait à en avoir beaucoup. J'ai fait des méthodes pour crér chaque type d'entité et les effacer.

Thomas : 
une fois mon problème réglé, je me suis occupé de coder la classe enemy (dérivée de entity) qui servira de base a toute les entités hostiles du jeu.
Elle donne les caractéristiques de tout les ennemis (position, vitesse, vélocité…).
J'ai ensuite codé le premier ennemi fonctionnel du jeu, le chaser(dérivé de enemy).
Il est plutôt simple, il cherche la position du sprite du joueur puis modifie ses paramètres moveX et moveY en comparant la position du joueur et la sienne avec moveUpdate puis se déplace vers le joueur avec Update.

jour 2:
Je me suis occupé à créer le second ennemi du jeu : le shooter. il se déplace vers le joueur et lui tire dessus à intervalle régulier
j'ai également travailler sur l'implémentation des objets (notamment le katana et le shuriken) mais ce n'est pas encore opérationnel

jour 3:
Je me suis occupé de créer la class HUD qui gère toute l'ui du joueur. Elle sert a afficher la vie du joueur et elle se met a jour selon les dégats/soint reçus par le joueur.
Le hud affiche également l'inventaire et il se met a jour quand un objet est ramassé, il apparait alors dans la hotbar.
J'ai aussi légèrement travaillé sur la carte en améliorant la classe stairs mais elle n'est pas encore fonctionnelle.

jour 4: j'ai amélioré la classe Hud, maintenant les objets rammasés par le joueur s'affichent dans la hotbar, le medipack et les clés ont été ajoutés dans l'inventaire
